import 'package:flutter/material.dart';import 'package:flutter/rendering.dart';import 'package:intl/intl.dart';import 'package:weather_app/constants.dart';import 'package:weather_app/enums/weather_detail-type.dart';import 'package:weather_app/models/weather_data.dart';import 'package:weather_app/models/weather_media.dart';import 'package:weather_app/screens/weather_screen/widgets/detail_grid_view.dart';import 'package:weather_app/screens/weather_screen/widgets/gradient_view.dart';import 'package:weather_app/screens/weather_screen/widgets/segmented_control.dart';import 'package:weather_app/screens/weather_screen/widgets/weather_app_bar.dart';import 'package:weather_app/services/weather_manager.dart';class WeatherScreen extends StatelessWidget {  WeatherScreen({@required this.data, @required this.media});  final WeatherManager weatherManager = WeatherManager();  final WeatherData data;  final WeatherMedia media;  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: WeatherAppBar(        title: getCurrentDay(),        leftItemTap: () => print('left'),        rightItemTap: () => print('right'),      ),      body: Column(        children: <Widget>[          GradientView(            child: SafeArea(              bottom: false,              child: Column(                children: <Widget>[                  Padding(                    padding: EdgeInsets.all(20),                    child: Text(data?.city ?? '-', style: kAftikaWhiteBold30),                  ),                  SegmentedControl(                    titles: ['Now', 'Hourly', 'Daily'],                    segmentPadding: EdgeInsets.symmetric(horizontal: 30, vertical: 15),                    cornerRadius: BorderRadius.circular(30),                    backgroundColor: Colors.white.withOpacity(0.4),                    selectedColor: Colors.white,                    onChanged: (index) => print(index),                  ),                  SizedBox(height: 30),                  ConstrainedBox(                    constraints: BoxConstraints(minWidth: 200, maxWidth: 300),                    child: Column(                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: <Widget>[                        Row(                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                          children: [Text('${data?.temperature ?? '-'}Â°', style: kAftikaWhite70), media?.image ?? Container()],                        ),                        Padding(                          padding: EdgeInsets.only(right: 80),                          child: Text(data?.description ?? '-', style: kAftikaWhiteBold40),                        ),                        DetailGridView(                          children: [                            weatherManager.updateItem(WeatherDetailType.minimum, '-'),                            weatherManager.updateItem(WeatherDetailType.maximum, '-'),                          ],                        ),                      ],                    ),                  ),                ],              ),            ),            colors: media?.colors ?? [Color(0xFF636363), Color(0xFFBFBFBF)],          ),          Expanded(            child: ConstrainedBox(              constraints: BoxConstraints(minWidth: 200, maxWidth: 300),              child: DetailGridView(                children: [                  weatherManager.updateItem(WeatherDetailType.sunrise, data?.sunrise ?? '-'),                  weatherManager.updateItem(WeatherDetailType.sunset, data?.sunset ?? '-'),                  weatherManager.updateItem(WeatherDetailType.wind, '${data?.wind ?? '-'}m/s'),                  weatherManager.updateItem(WeatherDetailType.waves, '-'),                  weatherManager.updateItem(WeatherDetailType.precipitation, data?.precipitation ?? '-'),                  weatherManager.updateItem(WeatherDetailType.humidity, '-'),                ],              ),            ),          ),        ],      ),      extendBodyBehindAppBar: true,    );  }  String getCurrentDay() {    final now = DateTime.now();    final formatted = DateFormat('MMMd').format(now);    return formatted.toUpperCase();  }}