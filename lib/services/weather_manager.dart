import 'package:flutter/material.dart';import 'package:weather_app/constants.dart';import 'package:weather_app/enums/weather_detail-type.dart';import 'package:weather_app/models/weather_media.dart';import 'package:weather_app/screens/weather_screen/widgets/detail_item.dart';class WeatherManager {  WeatherMedia _media = WeatherMedia();  WeatherMedia getWeatherMedia(int code) {    if (code == 800) {      _media = WeatherMedia(image: kSunImage, colors: [Color(0xFFF14C81), Color(0xFFFBCA9D)]);    } else if (code == 611 || code == 612) {      _media = WeatherMedia(image: kCloudImage, colors: [Color(0xFF247BFF), Color(0xFF5FEAFC)]);    } else if ((code >= 600 && code <= 610) || (code >= 621 && code <= 623)) {      _media = WeatherMedia(image: kHailImage, colors: [Color(0xFF195DA5), Color(0xFFB0D2F4)]);    } else if (code >= 300 && code <= 522) {      _media = WeatherMedia(image: kDrizzleImage, colors: [Color(0xFF195DA5), Color(0xFFB0D2F4)]);    } else if (code >= 200 && code <= 223) {      _media = WeatherMedia(image: kStormImage, colors: [Color(0xFF195DA5), Color(0xFFB0D2F4)]);    } else {      _media = WeatherMedia(image: kCloudyImage, colors: [Color(0xFF247BFF), Color(0xFF5FEAFC)]);    }    return _media;  }  DetailItem updateItem(WeatherDetailType type, String details) {    String title;    Image image;    Color color;    switch (type) {      case WeatherDetailType.minimum:        title = 'Minimum';        image = kDownArrowIcon;        color = Colors.white;        break;      case WeatherDetailType.maximum:        title = 'Maximum';        image = kUpArrowIcon;        color = Colors.white;        break;      case WeatherDetailType.sunrise:        title = 'Sunrise';        image = kSunIcon;        color = Colors.black;        break;      case WeatherDetailType.sunset:        title = 'Sunset';        image = kFoggyIcon;        color = Colors.black;        break;      case WeatherDetailType.wind:        title = 'Wind';        image = kWindIcon;        color = Colors.black;        break;      case WeatherDetailType.waves:        title = 'Waves';        image = kFloodIcon;        color = Colors.black;        break;      case WeatherDetailType.precipitation:        title = 'Precipitation';        image = kUmbrellaIcon;        color = Colors.black;        break;      case WeatherDetailType.humidity:        title = 'Humidity';        image = kPourRainIcon;        color = Colors.black;        break;    }    return DetailItem(      type: type,      title: title,      image: image,      details: details,      color: color,    );  }}